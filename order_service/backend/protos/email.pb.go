// Code generated by protoc-gen-go. DO NOT EDIT.
// source: email.proto

package email

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EmailRequest struct {
	From                 string   `protobuf:"bytes,1,opt,name=From,proto3" json:"From,omitempty"`
	To                   string   `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Subject              string   `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
	Body                 string   `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmailRequest) Reset()         { *m = EmailRequest{} }
func (m *EmailRequest) String() string { return proto.CompactTextString(m) }
func (*EmailRequest) ProtoMessage()    {}
func (*EmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_email_7811637cf5df396d, []int{0}
}
func (m *EmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailRequest.Unmarshal(m, b)
}
func (m *EmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailRequest.Marshal(b, m, deterministic)
}
func (dst *EmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailRequest.Merge(dst, src)
}
func (m *EmailRequest) XXX_Size() int {
	return xxx_messageInfo_EmailRequest.Size(m)
}
func (m *EmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmailRequest proto.InternalMessageInfo

func (m *EmailRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *EmailRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *EmailRequest) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *EmailRequest) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type Reply struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reply) Reset()         { *m = Reply{} }
func (m *Reply) String() string { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()    {}
func (*Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_email_7811637cf5df396d, []int{1}
}
func (m *Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reply.Unmarshal(m, b)
}
func (m *Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reply.Marshal(b, m, deterministic)
}
func (dst *Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reply.Merge(dst, src)
}
func (m *Reply) XXX_Size() int {
	return xxx_messageInfo_Reply.Size(m)
}
func (m *Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Reply proto.InternalMessageInfo

func (m *Reply) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*EmailRequest)(nil), "EmailRequest")
	proto.RegisterType((*Reply)(nil), "Reply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EmailSenderClient is the client API for EmailSender service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EmailSenderClient interface {
	SendEmail(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*Reply, error)
}

type emailSenderClient struct {
	cc *grpc.ClientConn
}

func NewEmailSenderClient(cc *grpc.ClientConn) EmailSenderClient {
	return &emailSenderClient{cc}
}

func (c *emailSenderClient) SendEmail(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/EmailSender/sendEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EmailSenderServer is the server API for EmailSender service.
type EmailSenderServer interface {
	SendEmail(context.Context, *EmailRequest) (*Reply, error)
}

func RegisterEmailSenderServer(s *grpc.Server, srv EmailSenderServer) {
	s.RegisterService(&_EmailSender_serviceDesc, srv)
}

func _EmailSender_SendEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EmailSenderServer).SendEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/EmailSender/SendEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EmailSenderServer).SendEmail(ctx, req.(*EmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EmailSender_serviceDesc = grpc.ServiceDesc{
	ServiceName: "EmailSender",
	HandlerType: (*EmailSenderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "sendEmail",
			Handler:    _EmailSender_SendEmail_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "email.proto",
}

func init() { proto.RegisterFile("email.proto", fileDescriptor_email_7811637cf5df396d) }

var fileDescriptor_email_7811637cf5df396d = []byte{
	// 170 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0x31, 0x0e, 0x82, 0x40,
	0x10, 0x45, 0x05, 0x11, 0x65, 0x50, 0x8b, 0xa9, 0x36, 0x56, 0x4a, 0x2c, 0xac, 0x28, 0xe4, 0x0c,
	0x7a, 0x80, 0xf5, 0x02, 0x0a, 0x4c, 0xa1, 0x01, 0x06, 0x77, 0x97, 0x82, 0xdb, 0x9b, 0x1d, 0x42,
	0x62, 0x37, 0xff, 0x25, 0xef, 0xe7, 0x0f, 0xa4, 0xd4, 0xbe, 0xde, 0x4d, 0xde, 0x1b, 0x76, 0x9c,
	0x3d, 0x61, 0x7b, 0xf3, 0x51, 0xd3, 0x77, 0x20, 0xeb, 0x10, 0x21, 0xba, 0x1b, 0x6e, 0x55, 0x70,
	0x0c, 0x2e, 0x89, 0x96, 0x1b, 0xf7, 0x10, 0x3a, 0x56, 0xa1, 0x90, 0xd0, 0x31, 0x2a, 0x58, 0xdb,
	0xa1, 0xfc, 0x50, 0xe5, 0xd4, 0x52, 0xe0, 0x1c, 0xbd, 0x5d, 0x72, 0x3d, 0xaa, 0x68, 0xb2, 0xfd,
	0x9d, 0x9d, 0x60, 0xa5, 0xa9, 0x6f, 0xc6, 0x49, 0xab, 0x2a, 0xb2, 0x56, 0xda, 0x37, 0x7a, 0x8e,
	0xd7, 0x02, 0x52, 0x19, 0xf1, 0xa0, 0xae, 0x26, 0x83, 0x67, 0x48, 0x2c, 0x75, 0xb5, 0x20, 0xdc,
	0xe5, 0xff, 0xfb, 0x0e, 0x71, 0x2e, 0x65, 0xd9, 0xa2, 0x8c, 0xe5, 0x81, 0xe2, 0x17, 0x00, 0x00,
	0xff, 0xff, 0xd6, 0xe3, 0x25, 0x82, 0xcf, 0x00, 0x00, 0x00,
}
